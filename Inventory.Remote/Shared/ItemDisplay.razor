@using Inventory.Domain
@using Inventory.Domain.Models
@inherits LayoutComponentBase

<div class="product-item-container">

    <div class="horizontal-group">
        <img class="product-display" src="@Product.ImageHref" loading="lazy" alt="product image"/>
        <div class="product-info-group">
            <span class="product-name">
                @Product.Name
                <span class="product-upc @UseUpc">
                    - Upc: @Product.UPC
                </span>
            </span>
            <p class="product-desc">@Product.Description</p>
            <span class="product-cost">
                @Product.Cost
                <span class="product-unit">
                    @Product.Unit
                </span>
            </span>


            <div class="last-item">
                <span class="item-qty">
                    <button class="qty-button" @onmousedown="@DecrementQuantity">-</button>
                    <span class="qty">Qty <input class="qty-amount" type="text" @bind="Quantity"/></span>
                    <button class="qty-button" @onmousedown="@IncrementQuantity">+</button>
                </span>

                <button class="add-button" @onmousedown="@OnAddClick">@ActionName</button>
            </div>


        </div>
    </div>


    
</div>

@code
{
    [Parameter]
    public ProductModel Product { get; set; }

    [Parameter]
    public Action<ProductModel> OnAction { get; set; }
    [Parameter]
    public string ActionName { get; set; }

    public string UseUpc => string.IsNullOrEmpty(Product.UPC) ? "hidden" : "";

    public int Quantity { get; set; } = 1;

    private void OnAddClick()
    {
        OnAction?.Invoke(Product);
    }

    private void DecrementQuantity()
    {
        Quantity--;
        if (Quantity < 1)
            Quantity = 1;
    }

    private void IncrementQuantity()
    {
        Quantity++;
    }
}