<Window
    x:Class="Inventory.Desktop.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Inventory.Desktop.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:Inventory.Desktop.ViewModel"
    Title="MainWindow"
    Width="1200"
    Height="750"
    MinWidth="1100"
    MinHeight="600"
    Background="{StaticResource Mid-Brush}"
    WindowStyle="SingleBorderWindow"
    mc:Ignorable="d">
    <Window.Resources>
        <SolidColorBrush x:Key="Menu.Static.Forground" Color="#FFF" />
        <SolidColorBrush x:Key="Menu.Static.Background" Color="{StaticResource Dark}" />
        <Style BasedOn="{StaticResource {x:Type Menu}}" TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{StaticResource Menu.Static.Background}" />
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
            <Setter Property="Foreground" Value="{StaticResource Menu.Static.Forground}" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--  Separator  -->
        <!--<Style x:Key="SeparatorStyle" TargetType="{x:Type Separator}">
            <Setter Property="Height" Value="1" />
            <Setter Property="Background" Value="#0f3c5a" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Rectangle Height="{TemplateBinding Height}" Fill="White" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <!--  Outer menu items  -->
        <Style x:Key="F" TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="#0f3c5a" />
            <Setter Property="Foreground" Value="White" />
            <Style.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" Value="Black" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="LightGray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--  Outer menu  -->
        <Style x:Key="A" TargetType="{x:Type ContextMenu}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">

                        <!--  Here is where you change the border thickness to zero on the menu  -->
                        <Border
                            x:Name="Border"
                            Background="Transparent"
                            BorderThickness="0">
                            <StackPanel
                                ClipToBounds="True"
                                IsItemsHost="True"
                                Orientation="Vertical" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#0f3c5a" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  SubmenuItem  -->

        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
            <Border Name="Border">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter
                        Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                    <Border
                        Name="Check"
                        Width="13"
                        Height="13"
                        Margin="6,0,6,0"
                        Background="#0f3c5a"
                        BorderBrush="#5082a4"
                        BorderThickness="1"
                        Visibility="Collapsed">
                        <Path
                            Name="CheckMark"
                            Width="7"
                            Height="7"
                            Data="M 0 0 L 7 7 M 0 7 L 7 0"
                            SnapsToDevicePixels="False"
                            Stroke="#5082a4"
                            StrokeThickness="2"
                            Visibility="Hidden" />
                    </Border>
                    <ContentPresenter
                        Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                    <TextBlock
                        x:Name="InputGestureText"
                        Grid.Column="2"
                        Margin="5,2,0,2"
                        DockPanel.Dock="Right"
                        Text="{TemplateBinding InputGestureText}" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsCheckable" Value="true">
                    <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#5082a4" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="#0f3c5a" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--  SubmenuHeader  -->

        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
            <Border Name="Border">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter
                        Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                    <ContentPresenter
                        Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                    <TextBlock
                        x:Name="InputGestureText"
                        Grid.Column="2"
                        Margin="5,2,2,2"
                        DockPanel.Dock="Right"
                        Text="{TemplateBinding InputGestureText}" />
                    <Path
                        Grid.Column="3"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="M 0 0 L 0 7 L 4 3.5 Z"
                        Fill="#0f3c5a" />
                    <Popup
                        Name="Popup"
                        AllowsTransparency="True"
                        Focusable="False"
                        HorizontalOffset="-4"
                        IsOpen="{TemplateBinding IsSubmenuOpen}"
                        Placement="Right"
                        PopupAnimation="Fade">
                        <Border
                            Name="SubmenuBorder"
                            Background="#0f3c5a"
                            BorderBrush="#0f3c5a"
                            BorderThickness="1"
                            SnapsToDevicePixels="True">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#5082a4" />
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="#0f3c5a" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>





    </Window.Resources>
    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>

    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="15"
            GlassFrameThickness="0"
            ResizeBorderThickness="5" />
    </WindowChrome.WindowChrome>

    <Border BorderThickness="0">
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Style.Triggers>
                    <!--  Add to avoid border disappearing when window is maximised  -->
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Maximized">
                        <Setter Property="Margin" Value="7" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Normal">
                        <Setter Property="Margin" Value="0" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!--  TopBar  -->
            <Grid
                Grid.Row="0"
                Height="25"
                VerticalAlignment="Top"
                Background="{StaticResource Dark-Brush}"
                ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>


                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <Button
                        Command="{Binding MinimizeCommand}"
                        Content="&#x2014;"
                        FontFamily="areal"
                        Style="{StaticResource TitleBarButtons}" />
                    <Button
                        Command="{Binding ToggleFullScreenCommand}"
                        Content="&#x1f5d7;"
                        Style="{StaticResource TitleBarButtons}" />
                    <Button
                        Command="{Binding CloseWindowCommand}"
                        Content="X"
                        Style="{StaticResource TitleBarButtons}" />
                </StackPanel>

            </Grid>
            <!--  SideBar  -->
            <StackPanel
                x:Name="SideBarNav"
                Grid.Row="1"
                Grid.RowSpan="2"
                Grid.Column="0"
                Width="175"
                Background="{StaticResource Dark-Brush}"
                Orientation="Vertical">

                <Border
                    Height="120"
                    Margin="0,1,0,15"
                    Background="#CDCACA"
                    CornerRadius="18">
                    <Image
                        RenderOptions.BitmapScalingMode="HighQuality"
                        Source="/Resources/Logo.png"
                        UseLayoutRounding="True" />

                </Border>

                <controls:SideBarItem
                    Padding="0,5,0,10"
                    SideBarName="Home"
                    SideBarSelected="True" />
                <controls:SideBarItem
                    Padding="0,0,0,10"
                    SideBarIcon="&#xf002;"
                    SideBarName="Catalog"
                    SideBarSelected="False" />
                <controls:SideBarItem
                    Padding="0,0,0,10"
                    SideBarIcon="&#xf013;"
                    SideBarName="Settings"
                    SideBarSelected="False" />

            </StackPanel>

            <Menu Grid.Row="1" Grid.Column="1">
                <MenuItem
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="{StaticResource Dark-Brush}"
                    Header="_File">
                    <MenuItem Header="_New" />
                    <MenuItem Header="_Open" />
                    <MenuItem Header="_Close" />
                    <MenuItem Header="_Export">
                        <MenuItem Background="{StaticResource Dark-Brush}" Header="E_xport Current" />

                        <MenuItem Background="{StaticResource Dark-Brush}" Header="Export _Wizard" />
                    </MenuItem>
                    <MenuItem Header="_Exit" />
                </MenuItem>
            </Menu>

            <ContentControl
                x:Name="ActiveContent"
                Grid.Row="2"
                Grid.Column="1" />

        </Grid>
    </Border>

</Window>