<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style x:Key="TitleBarButtons" TargetType="{x:Type Button}">

        <Style.Resources>
            <SolidColorBrush x:Key="TextBrush" Color="{StaticResource LightTextColor}" />
            <SolidColorBrush x:Key="HoverOverBrush" Color="{StaticResource HoverColor1}" />
            <SolidColorBrush x:Key="PressedBrush" Color="{StaticResource SelectedColor}" />
        </Style.Resources>

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Width" Value="40" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverOverBrush}" />
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
        </Style.Triggers>

    </Style>


    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#2D2C2C" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#000" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#201F1F" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#626262" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="Black" />
    <Style x:Key="RoundedButton" TargetType="{x:Type ButtonBase}">



        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Opacity=".15" />
            </Setter.Value>
        </Setter>


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        CornerRadius="8"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>



                </ControlTemplate>

            </Setter.Value>
        </Setter>

    </Style>


    <Style TargetType="{x:Type MenuItem}">
        <Style.Triggers>
            <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border
                                x:Name="templateRoot"
                                Background="{TemplateBinding Control.Background}"
                                BorderBrush="{TemplateBinding Control.BorderBrush}"
                                BorderThickness="{TemplateBinding Control.BorderThickness}"
                                SnapsToDevicePixels="true">
                                <Grid VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter
                                        x:Name="Icon"
                                        Width="16"
                                        Height="16"
                                        Margin="3"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        ContentSource="Icon"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    <Path
                                        x:Name="GlyphPanel"
                                        Margin="3"
                                        VerticalAlignment="Center"
                                        Data="F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z"
                                        Fill="{TemplateBinding Control.Foreground}"
                                        FlowDirection="LeftToRight"
                                        Visibility="Collapsed" />
                                    <ContentPresenter
                                        Grid.Column="1"
                                        Margin="{TemplateBinding Control.Padding}"
                                        ContentSource="Header"
                                        RecognizesAccessKey="true"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    <Popup
                                        x:Name="PART_Popup"
                                        AllowsTransparency="true"
                                        Focusable="false"
                                        IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                        Placement="Bottom"
                                        PlacementTarget="{Binding ElementName=templateRoot}"
                                        PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                        <Border
                                            x:Name="SubMenuBorder"
                                            Padding="2"
                                            Background="{StaticResource Dark-Brush}"
                                            BorderBrush="{StaticResource Mid-Brush}"
                                            BorderThickness="1">
                                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas
                                                        Width="0"
                                                        Height="0"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Top">
                                                        <Rectangle
                                                            Name="OpaqueRect"
                                                            Width="{Binding ElementName=SubMenuBorder, Path=ActualWidth}"
                                                            Height="{Binding ElementName=SubMenuBorder, Path=ActualHeight}"
                                                            Fill="{Binding ElementName=SubMenuBorder, Path=Background}" />
                                                    </Canvas>
                                                    <Rectangle
                                                        Width="1"
                                                        Margin="29,2,0,2"
                                                        HorizontalAlignment="Left"
                                                        Fill="#FFD7D7D7" />
                                                    <ItemsPresenter
                                                        x:Name="ItemsPresenter"
                                                        Grid.IsSharedSizeScope="true"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                                        KeyboardNavigation.TabNavigation="Cycle"
                                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                                    <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
                                </Trigger>
                                <Trigger Property="MenuItem.Icon" Value="{x:Null}">
                                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="MenuItem.IsChecked" Value="true">
                                    <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
                                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="MenuItem.IsHighlighted" Value="true">
                                    <Setter TargetName="templateRoot" Property="Border.Background" Value="#3D26A0DA" />
                                    <Setter TargetName="templateRoot" Property="Border.BorderBrush" Value="#FF26A0DA" />
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="false">
                                    <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="#FF707070" />
                                    <Setter TargetName="GlyphPanel" Property="Shape.Fill" Value="#FF707070" />
                                </Trigger>
                                <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                                    <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}" />
                                    <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>